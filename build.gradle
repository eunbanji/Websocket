plugins {
	id 'java'  // 자바 프로젝트용 플러그인
	id 'org.springframework.boot' version '3.3.5'  // Spring Boot 플러그인 (버전 3.3.5 사용)
	id 'io.spring.dependency-management' version '1.1.6'  // Spring의 의존성 관리를 위한 플러그인
}

group = 'com.example'  // 프로젝트의 그룹 ID
version = '0.0.1-SNAPSHOT'  // 프로젝트의 버전

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)  // 자바 17 버전을 사용하도록 설정
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor  // 컴파일 전용 의존성에 어노테이션 프로세서를 포함
	}
}

repositories {
	mavenCentral()  // Maven 중앙 저장소에서 의존성 다운로드
}

dependencies {
	// Spring Boot의 여러 스타터 의존성 추가
	implementation 'org.springframework.boot:spring-boot-starter-actuator'  // Actuator - 애플리케이션 모니터링 및 관리 도구
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	annotationProcessor 'org.projectlombok:lombok'  // JPA - 데이터베이스 연동 및 ORM 지원
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'  // Redis - 캐싱 및 NoSQL 데이터베이스 연동
	implementation 'org.springframework.boot:spring-boot-starter-security'  // Security - 인증 및 권한 부여 기능
	implementation 'org.springframework.boot:spring-boot-starter-web'  // Web - 웹 애플리케이션 개발을 위한 HTTP 및 MVC 기능
	implementation 'org.springframework.boot:spring-boot-starter-websocket'  // WebSocket - 실시간 통신을 위한 WebSocket 지원
	// https://mvnrepository.com/artifact/org.webjars/swagger-ui
	implementation group: 'org.webjars', name: 'swagger-ui', version: '5.18.0'


	// Lombok 라이브러리 추가 (컴파일 전용)
	compileOnly 'org.projectlombok:lombok'  // Lombok - 코드를 간결하게 하는 어노테이션 지원

	// 개발 전용 의존성
	developmentOnly 'org.springframework.boot:spring-boot-devtools'  // DevTools - 개발 편의를 위한 기능 제공 (핫 리로드 등)

	// 런타임 전용 의존성
	runtimeOnly 'com.h2database:h2'  // H2 데이터베이스 - 메모리 내장형 데이터베이스 (개발/테스트 용도)
	runtimeOnly 'com.mysql:mysql-connector-j'  // MySQL 드라이버 - MySQL 데이터베이스 연동을 위한 JDBC 드라이버

	// Lombok 어노테이션 프로세서
	annotationProcessor 'org.projectlombok:lombok'  // Lombok을 사용하여 컴파일 시 어노테이션 처리

	// 테스트 전용 의존성
	testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot의 테스트 지원 라이브러리
	testImplementation 'org.springframework.security:spring-security-test'  // Spring Security 테스트 지원
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'  // JUnit 플랫폼 런처 (테스트 실행)
}

tasks.named('test') {
	useJUnitPlatform()  // JUnit 플랫폼을 사용하여 테스트 실행
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	// 다른 의존성...
}

